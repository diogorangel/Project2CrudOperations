{
  "openapi": "3.0.0",
  "info": {
    "title": "Users API",
    "version": "1.0.0",
    "description": "A simple Express API for managing users stored in a MongoDB database."
  },
  "servers": [
    {
      "url": "http://localhost:3000",
      "description": "Local development server"
    },
    {
      "url": "https://project2crudoperations.onrender.com",
      "description": "Production server"
    }
  ],
  "tags": [
    {
      "name": "Books",
      "description": "Endpoints related to books"
    },
    {
      "name": "Authors",
      "description": "Endpoints related to authors"
    }
  ],
  "paths": {
    "/": {
      "get": {
        "description": "Checks if the API is online",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "description": "Creates a new user",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "example": "any"
                }
              }
            }
          }
        ],
        "responses": {
          "201": {
            "description": "Created"
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/books": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Gets all books",
        "responses": {
          "200": {
            "description": "List of books retrieved successfully."
          }
        }
      },
      "post": {
        "tags": [
          "Books"
        ],
        "summary": "Creates a new book",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "author": { "type": "string" },
                  "year": { "type": "integer" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Book created successfully."
          }
        }
      }
    },
    "/books/{id}": {
      "get": {
        "tags": [
          "Books"
        ],
        "summary": "Gets a book by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book retrieved successfully."
          },
          "404": {
            "description": "Book not found."
          }
        }
      },
      "put": {
        "tags": [
          "Books"
        ],
        "summary": "Updates a book by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "title": { "type": "string" },
                  "author": { "type": "string" },
                  "year": { "type": "integer" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Book updated successfully."
          },
          "404": {
            "description": "Book not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Books"
        ],
        "summary": "Deletes a book by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Book deleted successfully."
          },
          "404": {
            "description": "Book not found."
          }
        }
      }
    },
    "/authors": {
      "get": {
        "tags": [
          "Authors"
        ],
        "summary": "Gets all authors",
        "responses": {
          "200": {
            "description": "List of authors retrieved successfully."
          }
        }
      },
      "post": {
        "tags": [
          "Authors"
        ],
        "summary": "Creates a new author",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "country": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Author created successfully."
          }
        }
      }
    },
    "/authors/{id}": {
      "get": {
        "tags": [
          "Authors"
        ],
        "summary": "Gets an author by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Author retrieved successfully."
          },
          "404": {
            "description": "Author not found."
          }
        }
      },
      "put": {
        "tags": [
          "Authors"
        ],
        "summary": "Updates an author by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "name": { "type": "string" },
                  "country": { "type": "string" }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Author updated successfully."
          },
          "404": {
            "description": "Author not found."
          }
        }
      },
      "delete": {
        "tags": [
          "Authors"
        ],
        "summary": "Deletes an author by ID",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Author deleted successfully."
          },
          "404": {
            "description": "Author not found."
          }
        }
      }
    }
  }
}
